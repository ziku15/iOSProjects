//
//  AppDelegate.m
//  Pulse
//
//  Created by xibic on 5/28/14.
//  Copyright (c) 2014 Atomix. All rights reserved.
//

#import "AppDelegate.h"
#import "TestFlight.h"

@implementation AppDelegate

- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions{
    self.window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];
    // Override point for customization after application launch.
    
    [self.window makeKeyAndVisible];

    
    
    
    [TestFlight takeOff:@"e6ec0c8e-2dce-4ec5-b133-04235d163092"];
    
    [[UIApplication sharedApplication] registerForRemoteNotificationTypes:
     (UIRemoteNotificationTypeBadge | UIRemoteNotificationTypeSound | UIRemoteNotificationTypeAlert)];
    
    
    
    
    /*------------START------------*/
    [[AppManager sharedManager] startAppWithDelegate:self];
    /*------------END------------*/
    
    //This checks to see if there are launch options and whether they contain a push notification.
    if (launchOptions != nil){
		NSDictionary *dictionary = [launchOptions objectForKey:UIApplicationLaunchOptionsRemoteNotificationKey];
		if (dictionary != nil){
			XLog(@"Launched from push notification: %@", dictionary);
            [self clearNotifications];
            //Update UI if necessary
		}
	}
    
    return YES;
}

/* #####START - Push Notifications ##### */
#pragma mark -
#pragma mark - Notifications
- (void)application:(UIApplication*)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData*)deviceToken{
	//XLog(@"My token is: %@", deviceToken);
    
    NSString *deviceTokenString = [[NSString stringWithFormat:@"%@",deviceToken] stringByReplacingOccurrencesOfString:@" " withString:@""];
    deviceTokenString = [deviceTokenString stringByTrimmingCharactersInSet:[NSCharacterSet characterSetWithCharactersInString:@"<>"]];
    
    [SettingsManager sharedManager].deviceToken = deviceTokenString;
    XLog(@"DeviceToken: %@", [SettingsManager sharedManager].deviceToken);
    [[ServerManager sharedManager] checkForUserAuthentication:^(BOOL success) {
        //
    }];
}

- (void)application:(UIApplication*)application didFailToRegisterForRemoteNotificationsWithError:(NSError*)error{
	//XLog(@"Failed to get token, error: %@", error);
}

//Received Push Notification
- (void)application:(UIApplication*)application didReceiveRemoteNotification:(NSDictionary*)userInfo{
	XLog(@"Received notification: %@", userInfo);
    //Update UI if necessary
    [[AppManager sharedManager] showRootViewControllerForPushNotification:userInfo];
    [self clearNotifications];
    
}

- (void)clearNotifications {
    [[UIApplication sharedApplication] setApplicationIconBadgeNumber: 0];
    [[UIApplication sharedApplication] cancelAllLocalNotifications];
}

/* #####END##### */

- (void)applicationWillResignActive:(UIApplication *)application
{
    // Sent when the application is about to move from active to inactive state. This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message) or when the user quits the application and it begins the transition to the background state.
    // Use this method to pause ongoing tasks, disable timers, and throttle down OpenGL ES frame rates. Games should use this method to pause the game.
}

- (void)applicationDidEnterBackground:(UIApplication *)application
{
    // Use this method to release shared resources, save user data, invalidate timers, and store enough application state information to restore your application to its current state in case it is terminated later. 
    // If your application supports background execution, this method is called instead of applicationWillTerminate: when the user quits.
    id presentedViewController = [self.window.rootViewController presentedViewController];
    
    NSString *viewControllerName = NSStringFromClass([presentedViewController class]);
    
    if ([viewControllerName isEqualToString:@"MPInlineVideoFullscreenViewController"] ||
        [viewControllerName isEqualToString:@"MPMoviePlayerViewController"]) {
        //XLog(@"VideO in View: %@",viewControllerName);
        
    }else{
        [[AppManager sharedManager] appBecameInactive];
    }
    [self clearNotifications];
}

- (void)applicationWillEnterForeground:(UIApplication *)application
{
    // Called as part of the transition from the background to the inactive state; here you can undo many of the changes made on entering the background.
}

- (void)applicationDidBecomeActive:(UIApplication *)application
{
    // Restart any tasks that were paused (or not yet started) while the application was inactive. If the application was previously in the background, optionally refresh the user interface.
    [[AppManager sharedManager] appBecameActive];
}

- (void)applicationWillTerminate:(UIApplication *)application
{
    // Called when the application is about to terminate. Save data if appropriate. See also applicationDidEnterBackground:.
    [[AppManager sharedManager] appBecameInactive];

}

#pragma mark -
#pragma mark - Local Notification
- (void)application:(UIApplication *)app didReceiveLocalNotification:(UILocalNotification *)notif {
	// Handle the notificaton when the app is running
    NSString *eventName = notif.alertBody;
    eventName = [eventName stringByReplacingOccurrencesOfString:@"Upcoming Events:"
                                         withString:@""];
    
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Upcoming events" message:eventName delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil];
    [alert show];
}

#pragma mark -
#pragma mark - Landscape support for video
- (NSUInteger) application:(UIApplication *)application supportedInterfaceOrientationsForWindow:(UIWindow *)window {
    
    
    id presentedViewController = [window.rootViewController presentedViewController];
    
    NSString *viewControllerName = NSStringFromClass([presentedViewController class]);
    
    if ([viewControllerName isEqualToString:@"MPInlineVideoFullscreenViewController"] ||
        [viewControllerName isEqualToString:@"MPMoviePlayerViewController"]) {
        //XLog(@"VideO in View: %@",viewControllerName);
        return UIInterfaceOrientationMaskAllButUpsideDown;
    }else{
        return UIInterfaceOrientationMaskPortrait;
    }
    
    /*
     if ([[window.rootViewController presentedViewController] isKindOfClass:[MPMoviePlayerViewController class]]){
     //XLog(@"in if part - %@",[window.rootViewController presentedViewController]);
     return UIInterfaceOrientationMaskAllButUpsideDown;
     }else{
     //XLog(@"in if part - %@",[window.rootViewController presentedViewController]);
     return UIInterfaceOrientationMaskPortrait;
     }
     */
}

@end
