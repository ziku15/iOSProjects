//
//  StaffDirectoryViewController.m
//  Pulse
//
//  Created by xibic on 6/11/14.
//  Copyright (c) 2014 Atomix. All rights reserved.
//

#import "StaffDirectoryViewController.h"
#import "StaffTableViewCell.h"
#import "StaffSearchView.h"
#import "DepartmentItem.h"
#import "DeptViewController.h"
#import "StaffTableView.h"


#define CELL_HEIGHT 50


@interface StaffDirectoryViewController () <StaffSearchViewDelegate,UITableViewDataSource,UITableViewDelegate>{
    BOOL SHOULD_GO_BACK_TO_MENU;
}

@end

@implementation StaffDirectoryViewController{
    
    UISegmentedControl *tabBarControl;
    UITableView *deptListTableView;    // For Browse
    StaffSearchView *staffSearchView;
    StaffTableView *saveContactTableView;  // save contact table view
    NSMutableArray *deptListName; // data Array
    
    NSMutableArray *allSavedContact; // new added for fetch All Save contact from Server
    
}

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        self.title = @"Staff Directory";
    }
    return self;
}

- (void)goBack{
    if (SHOULD_GO_BACK_TO_MENU) [self.navigationController popViewControllerAnimated:YES];
    else {
        SHOULD_GO_BACK_TO_MENU = TRUE;
        [staffSearchView cancelButtonAction];
    }
    [loadingView dismisssView];
}

- (void)viewDidLoad{
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    SHOULD_GO_BACK_TO_MENU = TRUE;
    [loadingView removeFromSuperview];
    //------- Created Loacl database
/*
    NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
    [defaults removeObjectForKey:kSavedContact];
    [defaults synchronize];
*/
    
    [self TabBarDesignSection];  // Tab bar design Section
    
    
   // ----  Table View One "Browse" -----
    
    deptListTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 65, self.view.frame.size.width, [[UIScreen mainScreen] bounds].size.height - 180)];
 
    [deptListTableView setBackgroundColor:[UIColor clearColor]];
    [deptListTableView setDelegate:self];
    [deptListTableView setDataSource:self];
    [deptListTableView setScrollEnabled:YES];
     deptListTableView.hidden = NO;
    //deptListTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    deptListTableView.tableFooterView = [[UIView alloc] initWithFrame:CGRectZero];
    [self.view addSubview:deptListTableView];
    
    // Staff Table View For Save Conatact
    
    saveContactTableView = [[StaffTableView alloc] initWithFrame:CGRectMake(0, 65, SCREEN_SIZE.width, SCREEN_SIZE.height - 180) withArray:nil];
    [self.view addSubview:saveContactTableView];
    saveContactTableView.hidden = YES;
    
 
    
    // API Call 5
    
    [[ServerManager sharedManager] fetchStaffDirectoryDepartments:^(BOOL success, NSMutableArray *resultDataArray) {
        if (success) {
            //XLog(@"Department: %@",resultDataArray);
            deptListName = resultDataArray;
            [deptListTableView reloadData];
        }
    }];
    
    [self addBottomSearchBar];   // bottom search bar section
}

//--- Tab bar Action

- (void)tabBarAction:(UISegmentedControl *)segment {
    
    //XLog(@"tab Bar selected : %d", segment.selectedSegmentIndex);
    
    
// +++++++++++ Tab Bar boder color ++++++++++++++
    
    for (int i=0; i<[tabBarControl.subviews count]; i++)
    {
        if ([[tabBarControl.subviews objectAtIndex:i]isSelected] )
        {
            [[tabBarControl.subviews objectAtIndex:i] setTintColor:[UIColor sidraFlatTurquoiseColor]];

        }
        else
        {
            [[tabBarControl.subviews objectAtIndex:i] setTintColor:[UIColor clearColor]];
            
        }
    }
    
 // -- Action
    
    if (segment.selectedSegmentIndex==0) {
        
        XLog(@"Browse");
          saveContactTableView.isSavedContactViewMode = FALSE;
        
        [self setNavigationCustomTitleView:@"Staff Directory" with:@""];
        [staffSearchView updatePlaceHolderText:@"Search across all departments"];
         staffSearchView.searchDept = @"0";
        staffSearchView.savedContact = @"NO";
        // visible & data section
        deptListTableView.hidden = NO;
        saveContactTableView.hidden = YES;
        [deptListTableView reloadData];
    }
    
    else if (segment.selectedSegmentIndex==1) {
        
        XLog(@"saved contact");
          saveContactTableView.isSavedContactViewMode = TRUE;
        
        [self setNavigationCustomTitleView:@"Staff Directory" with:@"Contacts you bookmarked"];
        [staffSearchView updatePlaceHolderText:@"Search within saved contact"];
         staffSearchView.searchDept = @"0";
        staffSearchView.savedContact = @"YES";
        // visible & data section
        deptListTableView.hidden = YES;
        saveContactTableView.hidden = NO;
        //[self saveContactArrayData];  // off it for offline data
        
        [self retriveAllSavedContactFromServer];  // replace it with saveContactArrayData method
    }

}

// Local Database Save Contact Data // off it
-(void)saveContactArrayData {
    
    NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
    NSArray *SaveContactArray= [defaults objectForKey:kSavedContact];
    NSMutableArray *_saveContactData = [[NSMutableArray alloc] init];
    
    for (int i = 0; i<SaveContactArray.count; i++) {
        
        NSData *decodeObject = [SaveContactArray objectAtIndex:i];
        StaffItem *item = [NSKeyedUnarchiver unarchiveObjectWithData:decodeObject];
        [_saveContactData addObject:item];
    }
    
    
    [saveContactTableView refreshArrayData:_saveContactData];
}


// fetch All save contact from Server
-(void)retriveAllSavedContactFromServer {
    
    // API 6
    
    NSString *_deptID = @"0";
    allSavedContact = [[NSMutableArray alloc] init];
    
    [[ServerManager sharedManager] fetchStaffDirectoryStaffs:@"" deptID:_deptID scrollDirection:@"" completion:^(BOOL success, NSMutableArray *resultDataArray) {
        if (success) {
            
            allSavedContact = resultDataArray;
            [saveContactTableView refreshArrayData:allSavedContact];
            if (!resultDataArray.count>0) {
                CGRect frame = CGRectMake([UIScreen mainScreen].bounds.size.width/10.0,
                                          [UIScreen mainScreen].bounds.size.height/4.0 , 220, 105);
                NSString *msg = @"List currently empty. You can save contacts by tapping the star next to their names";
                AlertPopView *alertMsg = [[AlertPopView alloc] initWithFrame:frame alertMsg:msg withDelay:1.5];
                [[UIApplication sharedApplication].keyWindow addSubview:alertMsg];
                alertMsg = nil;
            }
        }else{
            CGRect frame = CGRectMake([UIScreen mainScreen].bounds.size.width/10.0,
                                      [UIScreen mainScreen].bounds.size.height/4.0 , 220, 105);
            NSString *msg = @"List currently empty. You can save contacts by tapping the star next to their names";
            AlertPopView *alertMsg = [[AlertPopView alloc] initWithFrame:frame alertMsg:msg withDelay:1.5];
            [[UIApplication sharedApplication].keyWindow addSubview:alertMsg];
            alertMsg = nil;
        }
    }];
    
}

#pragma mark - UI Design Section

-(void) TabBarDesignSection {
    
    // +++++++++ white background View +++++++++++
    
    UIView *whiteBg = [[UIView alloc] initWithFrame:CGRectMake(0, 0, self.view.frame.size.width, 50)];
    whiteBg.backgroundColor = [UIColor whiteColor];
    [self.view addSubview:whiteBg];
    
    UIView *lightGrayEffect = [[UIView alloc] initWithFrame:CGRectMake(0, whiteBg.frame.size.height-1, self.view.frame.size.width, 1)];
    lightGrayEffect.backgroundColor = [UIColor lightGrayColor];
    [whiteBg addSubview:lightGrayEffect];
    
    // +++++++++ Tab bar ++++++++++++++
    
    tabBarControl = [[UISegmentedControl alloc] initWithItems:[NSArray arrayWithObjects:@"Browse", @"Saved Contacts", nil]];
    tabBarControl.frame = CGRectMake(10, 10, 300, 30);
    tabBarControl.segmentedControlStyle = UISegmentedControlStyleBar;
    tabBarControl.selectedSegmentIndex = 0;
    tabBarControl.tintColor = [UIColor sidraFlatTurquoiseColor];
    [tabBarControl addTarget:self action:@selector(tabBarAction:) forControlEvents: UIControlEventValueChanged];
    [[tabBarControl.subviews objectAtIndex:1] setTintColor:[UIColor clearColor]];
    [self.view addSubview:tabBarControl];
    
    NSDictionary *attributes = [NSDictionary dictionaryWithObjectsAndKeys:
                                [UIFont systemFontOfSize:14], UITextAttributeFont,
                                [UIColor blackColor], UITextAttributeTextColor,
                                nil];
    [tabBarControl setTitleTextAttributes:attributes forState:UIControlStateNormal];
    NSDictionary *highlightedAttributes = [NSDictionary dictionaryWithObject:[UIColor whiteColor] forKey:UITextAttributeTextColor];
    [tabBarControl setTitleTextAttributes:highlightedAttributes forState:UIControlStateHighlighted];
    
    //--- Gray Border effect of tab bar
    
    CALayer *borderLayer = [CALayer layer];
    CGRect borderFrame = CGRectMake(0, 0, (tabBarControl.frame.size.width), (tabBarControl.frame.size.height));
    [borderLayer setBackgroundColor:[[UIColor clearColor] CGColor]];
    [borderLayer setFrame:borderFrame];
    borderLayer.borderColor = kViewBorderColor;
    borderLayer.borderWidth = kViewBorderWidth;
    borderLayer.cornerRadius = kViewCornerRadius;
    [tabBarControl.layer addSublayer:borderLayer];
    
}

#pragma mark - Search
// ******* Search Option Added ************ //
- (void)addBottomSearchBar{
    staffSearchView = [[StaffSearchView alloc] initWithPlaceholderText:@"Search across all departments"];
    staffSearchView.delegate = self;
    staffSearchView.searchDept = @"0";
    staffSearchView.savedContact = @"NO";
    [self.view addSubview:staffSearchView];
}

#pragma mark - StaffSearchView delegate

- (void)searchViewRemoved{
    //XLog(@"Staff Search View delegate");
    SHOULD_GO_BACK_TO_MENU = TRUE;

    
}
-(void)showingSearcViewOnScreen{
    //XLog(@"Staff Search Showing");
    SHOULD_GO_BACK_TO_MENU = FALSE;
}

#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    // Return the number of sections.
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    // Return the number of rows in the section.

    if ([deptListName count]==0) {
        return 0;
    }
    else
        return [deptListName count];

}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{

    
    static NSString *cellIdentifier = @"DepartmentCell";
    
    StaffTableViewCell *cell = (StaffTableViewCell *)[tableView dequeueReusableCellWithIdentifier:cellIdentifier];
    
    // If there is no cell to reuse, create a new one
    if(cell == nil)
    {
        cell = [[StaffTableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellIdentifier];
        cell.nameLabel.frame = CGRectMake(15, 17, 200, 14);
        cell.grayArrow.frame =CGRectMake(self.view.frame.size.width - 35, 17.5, 10, 15);
    }
    

    DepartmentItem *item = (DepartmentItem *) [deptListName objectAtIndex:indexPath.row];
    cell.nameLabel.text = item.deptName;
    
    return cell;


}

#pragma mark - Table view delegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    
     [deptListTableView deselectRowAtIndexPath:[tableView indexPathForSelectedRow] animated:YES];
        
     DepartmentItem *item = (DepartmentItem *)[deptListName objectAtIndex:indexPath.row];
    
     DeptViewController *deptView = [[DeptViewController alloc] initWithNibName:@"DeptViewController" bundle:nil];
     deptView.deptItem = item;
     deptView.shouldShowRightMenuButton = YES;
     [self.navigationController pushViewController:deptView animated:YES];
    
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    return  CELL_HEIGHT;

}


@end
